{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eaar2\\\\Documents\\\\TAREAS\\\\BBDD\\\\proyectou2\\\\modelado-ecomerce\\\\frontend\\\\src\\\\components\\\\AlcoholConsumption.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Container, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper, Typography, Box, FormControl, InputLabel, Select, MenuItem } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AlcoholConsumption = () => {\n  _s();\n  const [consumptionData, setConsumptionData] = useState([]);\n  const [selectedCountry, setSelectedCountry] = useState('');\n  const [countries, setCountries] = useState([]);\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/alcohol-consumption');\n      setConsumptionData(response.data);\n\n      // Extract unique countries\n      const uniqueCountries = [...new Set(response.data.map(item => item.Countries))];\n      setCountries(uniqueCountries);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  const handleCountryChange = async event => {\n    const country = event.target.value;\n    setSelectedCountry(country);\n    try {\n      if (country) {\n        const response = await axios.get(`http://localhost:5000/api/alcohol-consumption/country/${country}`);\n        setConsumptionData(response.data);\n      } else {\n        fetchData(); // Reset to show all data\n      }\n    } catch (error) {\n      console.error('Error fetching country data:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    sx: {\n      mt: 4,\n      mb: 4\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      component: \"div\",\n      children: \"Global Alcohol Consumption Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        sx: {\n          minWidth: 200\n        },\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          children: \"Filter by Country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          value: selectedCountry,\n          label: \"Filter by Country\",\n          onChange: handleCountryChange,\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"\",\n            children: /*#__PURE__*/_jsxDEV(\"em\", {\n              children: \"All Countries\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), countries.map(country => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: country,\n            children: country\n          }, country, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        sx: {\n          minWidth: 650\n        },\n        \"aria-label\": \"alcohol consumption table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Gender\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Count\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Country\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Country Code\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: consumptionData.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n            sx: {\n              '&:last-child td, &:last-child th': {\n                border: 0\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              component: \"th\",\n              scope: \"row\",\n              children: row.Gender\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: row.Count\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: row.Countries\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: row.CountriesCode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: new Date(row.Date).toLocaleDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 33\n            }, this)]\n          }, row._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n_s(AlcoholConsumption, \"TUQiFIWwMm1u2BOFp5pGOwrr8pM=\");\n_c = AlcoholConsumption;\nexport default AlcoholConsumption;\nvar _c;\n$RefreshReg$(_c, \"AlcoholConsumption\");","map":{"version":3,"names":["React","useState","useEffect","axios","Container","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Typography","Box","FormControl","InputLabel","Select","MenuItem","jsxDEV","_jsxDEV","AlcoholConsumption","_s","consumptionData","setConsumptionData","selectedCountry","setSelectedCountry","countries","setCountries","fetchData","response","get","data","uniqueCountries","Set","map","item","Countries","error","console","handleCountryChange","event","country","target","value","maxWidth","sx","mt","mb","children","variant","gutterBottom","component","fileName","_jsxFileName","lineNumber","columnNumber","minWidth","label","onChange","align","row","border","scope","Gender","Count","CountriesCode","Date","toLocaleDateString","_id","_c","$RefreshReg$"],"sources":["C:/Users/eaar2/Documents/TAREAS/BBDD/proyectou2/modelado-ecomerce/frontend/src/components/AlcoholConsumption.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport {\n    Container,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Paper,\n    Typography,\n    Box,\n    FormControl,\n    InputLabel,\n    Select,\n    MenuItem,\n} from '@mui/material';\n\nconst AlcoholConsumption = () => {\n    const [consumptionData, setConsumptionData] = useState([]);\n    const [selectedCountry, setSelectedCountry] = useState('');\n    const [countries, setCountries] = useState([]);\n\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    const fetchData = async () => {\n        try {\n            const response = await axios.get('http://localhost:5000/api/alcohol-consumption');\n            setConsumptionData(response.data);\n            \n            // Extract unique countries\n            const uniqueCountries = [...new Set(response.data.map(item => item.Countries))];\n            setCountries(uniqueCountries);\n        } catch (error) {\n            console.error('Error fetching data:', error);\n        }\n    };\n\n    const handleCountryChange = async (event) => {\n        const country = event.target.value;\n        setSelectedCountry(country);\n        \n        try {\n            if (country) {\n                const response = await axios.get(`http://localhost:5000/api/alcohol-consumption/country/${country}`);\n                setConsumptionData(response.data);\n            } else {\n                fetchData(); // Reset to show all data\n            }\n        } catch (error) {\n            console.error('Error fetching country data:', error);\n        }\n    };\n\n    return (\n        <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\n            <Typography variant=\"h4\" gutterBottom component=\"div\">\n                Global Alcohol Consumption Data\n            </Typography>\n            \n            <Box sx={{ mb: 3 }}>\n                <FormControl sx={{ minWidth: 200 }}>\n                    <InputLabel>Filter by Country</InputLabel>\n                    <Select\n                        value={selectedCountry}\n                        label=\"Filter by Country\"\n                        onChange={handleCountryChange}\n                    >\n                        <MenuItem value=\"\">\n                            <em>All Countries</em>\n                        </MenuItem>\n                        {countries.map((country) => (\n                            <MenuItem key={country} value={country}>\n                                {country}\n                            </MenuItem>\n                        ))}\n                    </Select>\n                </FormControl>\n            </Box>\n\n            <TableContainer component={Paper}>\n                <Table sx={{ minWidth: 650 }} aria-label=\"alcohol consumption table\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>Gender</TableCell>\n                            <TableCell align=\"right\">Count</TableCell>\n                            <TableCell>Country</TableCell>\n                            <TableCell>Country Code</TableCell>\n                            <TableCell>Date</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {consumptionData.map((row) => (\n                            <TableRow\n                                key={row._id}\n                                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                            >\n                                <TableCell component=\"th\" scope=\"row\">\n                                    {row.Gender}\n                                </TableCell>\n                                <TableCell align=\"right\">{row.Count}</TableCell>\n                                <TableCell>{row.Countries}</TableCell>\n                                <TableCell>{row.CountriesCode}</TableCell>\n                                <TableCell>{new Date(row.Date).toLocaleDateString()}</TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        </Container>\n    );\n};\n\nexport default AlcoholConsumption;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}